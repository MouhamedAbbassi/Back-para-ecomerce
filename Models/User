const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const userSchema = new Schema({
  name: {
    type: String,
  },
  email: {
    type: String,
    unique: true,
    required: true,
    },
  password: {
    type: String,
    minlength: 6,
    required: true,
  },
  phone: {
    type: String,  
    unique: true,
    required: true,
  },
  role: {
    type: String,
  },
}, { timestamps: true });

const UserModel = mongoose.model('User', userSchema);

class User {
  constructor(name, email, password, phone) {
    this.name = name;
    this.email = email;
    this.password = password;
    this.phone = phone;
    this.role = null;
  }

  async register() {
    try {

      const hashedPass = await bcrypt.hash(this.password, 10);
      this.password = hashedPass;
      return await this.save();
    } catch (error) {
      throw error;
    }
  }
}

module.exports = {
  User: UserModel,
  UserClass: User,
};